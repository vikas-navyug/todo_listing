{"version":3,"sources":["vendor/ember-cli/app-prefix.js","frontend/adapters/application.js","frontend/app.js","frontend/components/app-version.js","frontend/controllers/array.js","frontend/controllers/login.js","frontend/controllers/object.js","frontend/helpers/constants.js","frontend/helpers/http.js","frontend/helpers/session.js","frontend/initializers/app-version.js","frontend/initializers/export-application-global.js","frontend/initializers/session.js","frontend/models/user.js","frontend/router.js","frontend/routes/application.js","frontend/routes/login.js","frontend/serializers/application.js","frontend/templates/application.js","frontend/templates/home.js","frontend/templates/login.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('frontend/adapters/application', ['exports', 'ember-data'], function (exports, _emberData) {\n  var ApplicationAdapter;\n\n  ApplicationAdapter = _emberData['default'].RESTAdapter.extend();\n\n  exports['default'] = ApplicationAdapter;\n});","define('frontend/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'frontend/config/environment'], function (exports, _ember, _emberResolver, _emberLoadInitializers, _frontendConfigEnvironment) {\n  var App;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _frontendConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _frontendConfigEnvironment['default'].podModulePrefix,\n    Resolver: _emberResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _frontendConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('frontend/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'frontend/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _frontendConfigEnvironment) {\n\n  var name = _frontendConfigEnvironment['default'].APP.name;\n  var version = _frontendConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('frontend/controllers/array', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('frontend/controllers/login', ['exports', 'ember', 'frontend/helpers/constants'], function (exports, _ember, _frontendHelpersConstants) {\n  var controller;\n\n  controller = _ember['default'].Controller.extend({\n    actions: {\n      login: function login() {\n        var email, password, that;\n        email = this.get('email');\n        password = this.get('password');\n        that = this;\n        return $.ajax({\n          url: _frontendHelpersConstants['default'].SIGN_IN_URL,\n          type: 'POST',\n          data: {\n            username: email,\n            password: password\n          },\n          success: function success() {\n            alert('User Logged in Successfully');\n            return that.transitionToRoute('home');\n          },\n          error: function error(_error) {\n            return alert(_error.message);\n          }\n        });\n      }\n    }\n  });\n\n  exports['default'] = controller;\n});","define('frontend/controllers/object', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('frontend/helpers/constants', ['exports'], function (exports) {\n  var constants;\n\n  constants = {\n    HOST: '',\n    APP_NAME: 'My App'\n  };\n\n  constants.LOGOUT_URL = constants.HOST + '/sign_out';\n\n  constants.LOGGED_IN_USER_URL = constants.HOST + '/users/logged_in';\n\n  constants.SIGN_IN_URL = constants.HOST + \"/users/sign_in\";\n\n  constants.SIGN_UP_URL = constants.HOST + \"/users/sign_up\";\n\n  constants.FORGOT_PASSWORD_URL = constants.HOST + '/users/forgot_password';\n\n  constants.RESET_PASSWORD_URL = constants.HOST + '/auth/password';\n\n  constants.CHANGE_PASSWORD_URL = constants.HOST + '/users/change_password';\n\n  exports['default'] = constants;\n});","define('frontend/helpers/http', ['exports'], function (exports) {\n  var Http;\n\n  Http = {\n    ajax: function ajax(url, type, hash, context) {\n      if (type.toLowerCase() !== 'get' && hash.data !== null) {\n        hash.data = JSON.stringify(hash.data);\n      }\n      hash.url = url;\n      hash.type = type;\n      hash.dataType = 'json';\n      hash.contentType = 'application/json; charset=utf-8';\n      hash.context = context || this;\n      return $.ajax(hash);\n    }\n  };\n\n  exports['default'] = Http;\n});","define('frontend/helpers/session', ['exports', 'ember', 'frontend/helpers/constants'], function (exports, _ember, _frontendHelpersConstants) {\n  var Session;\n\n  Session = _ember['default'].Object.extend({\n    isAuthenticated: false,\n    currentUser: null,\n    appName: _frontendHelpersConstants['default'].APP_NAME,\n    initialize: function initialize(user) {\n      var that, userPromise;\n      if (user.id) {\n        that = this;\n        userPromise = this.store.findRecord('user', user.id).then(function (user) {\n          return that.set('currentUser', userPromise);\n        });\n        return userPromise;\n      }\n    }\n  });\n\n  exports['default'] = Session;\n});","define('frontend/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'frontend/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _frontendConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_frontendConfigEnvironment['default'].APP.name, _frontendConfigEnvironment['default'].APP.version)\n  };\n});","define('frontend/initializers/export-application-global', ['exports', 'ember', 'frontend/config/environment'], function (exports, _ember, _frontendConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_frontendConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var value = _frontendConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_frontendConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('frontend/initializers/session', ['exports', 'ember', 'frontend/helpers/session'], function (exports, _ember, _frontendHelpersSession) {\n  var SessionInitializer;\n\n  SessionInitializer = {\n    name: 'injectSession',\n    initialize: function initialize(registry, app) {\n      app.register('service:session', _frontendHelpersSession['default']);\n      app.inject('controller', 'session', 'service:session');\n      app.inject('route', 'session', 'service:session');\n      return app.inject('service:session', 'store', 'service:store');\n    }\n  };\n\n  exports['default'] = SessionInitializer;\n});","define('frontend/models/user', ['exports', 'ember-data'], function (exports, _emberData) {\n  var model;\n\n  model = _emberData['default'].Model.extend({\n    firstname: _emberData['default'].attr('string'),\n    lastname: _emberData['default'].attr('string'),\n    email: _emberData['default'].attr('string')\n  });\n\n  exports['default'] = model;\n});","define('frontend/router', ['exports', 'ember', 'frontend/config/environment'], function (exports, _ember, _frontendConfigEnvironment) {\n  var Router;\n\n  Router = _ember['default'].Router.extend({\n    location: _frontendConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('login', {\n      path: '/'\n    });\n    return this.route('home');\n  });\n\n  exports['default'] = Router;\n});","define('frontend/routes/application', ['exports', 'ember', 'frontend/helpers/constants'], function (exports, _ember, _frontendHelpersConstants) {\n  var route;\n\n  route = _ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      return this.getCurrentUser();\n    },\n    getCurrentUser: function getCurrentUser() {\n      var that;\n      that = this;\n      return $.ajax({\n        url: _frontendHelpersConstants['default'].LOGGED_IN_USER_URL,\n        type: 'GET'\n      }).then(function (data) {\n        if (data.message === 'Nobody logged In') {\n          return that.transitionTo('login');\n        } else {\n          return that.get('session').initialize(data);\n        }\n      });\n    }\n  });\n\n  exports['default'] = route;\n});","define('frontend/routes/login', ['exports', 'ember'], function (exports, _ember) {\n  var route;\n\n  route = _ember['default'].Route.extend({});\n\n  exports['default'] = route;\n});","define('frontend/serializers/application', ['exports', 'ember-data'], function (exports, _emberData) {\n  var ApplicationSerializer;\n\n  ApplicationSerializer = _emberData['default'].RESTSerializer.extend();\n\n  exports['default'] = ApplicationSerializer;\n});","define(\"frontend/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.11\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"frontend/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"outlet\", [\"loc\", [null, [1, 0], [1, 10]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"frontend/templates/home\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.11\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"frontend/templates/home.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Hi \\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes() {\n        return [];\n      },\n      statements: [],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"frontend/templates/login\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.11\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"frontend/templates/login.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"Email: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"Password: \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        var el3 = dom.createTextNode(\"Log In\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [5]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);\n        morphs[2] = dom.createElementMorph(element1);\n        return morphs;\n      },\n      statements: [[\"inline\", \"input\", [], [\"type\", \"text\", \"value\", [\"subexpr\", \"@mut\", [[\"get\", \"email\", [\"loc\", [null, [2, 40], [2, 45]]]]], [], []]], [\"loc\", [null, [2, 14], [2, 47]]]], [\"inline\", \"input\", [], [\"type\", \"password\", \"value\", [\"subexpr\", \"@mut\", [[\"get\", \"password\", [\"loc\", [null, [3, 47], [3, 55]]]]], [], []]], [\"loc\", [null, [3, 17], [3, 57]]]], [\"element\", \"action\", [\"login\"], [], [\"loc\", [null, [4, 10], [4, 28]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('frontend/config/environment', ['ember'], function(Ember) {\n  var prefix = 'frontend';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (!runningTests) {\n  require(\"frontend/app\")[\"default\"].create({\"name\":\"frontend\",\"version\":\"0.0.0+cfa55e40\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"frontend.js"}